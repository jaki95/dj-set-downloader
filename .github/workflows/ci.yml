name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'
        cache: true

    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golangci-lint
      run: golangci-lint run ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        # Install ffmpeg for audio tests
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        # Create necessary directories
        mkdir -p data output

    - name: Run tests
      env:
        SOUNDCLOUD_CLIENT_ID: "test_client_id_for_ci"
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_SEARCH_ID_1001TRACKLISTS: ${{ secrets.GOOGLE_SEARCH_ID_1001TRACKLISTS }}
        GOOGLE_SEARCH_ID_SOUNDCLOUD: ${{ secrets.GOOGLE_SEARCH_ID_SOUNDCLOUD }}
        GOOGLE_SEARCH_ID_TRACKID: ${{ secrets.GOOGLE_SEARCH_ID_TRACKID }}

      run: go test -short -v -race -coverprofile=coverage.out ./...
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.3.1
      with:
        files: ./coverage.out
        flags: unittests
        
    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.html
