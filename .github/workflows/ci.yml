name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        cache: true

    - name: Install golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Run golangci-lint
      run: golangci-lint run ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        # Install ffmpeg for audio tests
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        # Create necessary directories
        mkdir -p data output

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        cache: true

    - name: Build
      run: go build -v ./cmd/...
      
    - name: Archive binary
      uses: actions/upload-artifact@v3
      with:
        name: dj-set-downloader
        path: dj-set-downloader 